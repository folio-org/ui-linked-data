name: FOLIO UI Publish Module

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      folio-npm-registry:
        required: true
        type: string
      folio-npm-registry-auth:
        required: true
        type: string
      package-version:
        required: true
        type: string
      publish-exclusions:
        required: true
        type: string
      module-descriptor-available:
        required: true
        type: boolean
      compiled-translations-available:
        required: true
        type: boolean
      install-before-publish:
        required: true
        type: boolean
    secrets:
      npm-token:
        required: true

jobs:
  run:
    name: Publish module
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          show-progress: false # spammy

      - name: Install Node ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          check-latest: true
          always-auth: true

      - name: Set FOLIO NPM registry
        run: npm config set @folio:registry ${{ inputs.folio-npm-registry }}

      - name: Authenticate to FOLIO NPM registry
        run: npm config set ${{ inputs.folio-npm-registry-auth }}:_auth ${{ secrets.npm-token }}

      - name: Download module descriptor
        if: ${{ inputs.module-descriptor-available }}
        uses: actions/download-artifact@v4
        with:
          name: module-descriptor.json

      - name: Download compiled translations
        if: ${{ inputs.compiled-translations-available }}
        uses: actions/download-artifact@v4
        with:
          name: translations
          path: translations

      - name: Configure package exclusions
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: .npmignore
          contents: ${{ inputs.publish-exclusions }}
          write-mode: append

      - name: Print package exclusions
        run: cat .npmignore

      - name: Set package version number to ${{ inputs.package-version }}
        run: |-
          yarn config set version-git-tag false
          yarn version --new-version ${{ inputs.package-version }}

      - name: Install dependencies
        if: ${{ inputs.install-before-publish }}
        run: yarn install --frozen-lockfile --ignore-scripts --non-interactive

      - name: Build
        run: npm run build:lib

      - name: Publish package
        run: npm publish